{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/initial/initial.component.ts","webpack:///src/app/initial/initial.component.html","webpack:///src/app/principal/principal.component.ts","webpack:///src/app/principal/principal.component.html","webpack:///src/app/show-initial.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","showService","title","getShow","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","InitialComponent","value","setNumber","inputValue","input","console","log","strInput","alert","setShow","clickOk","PrincipalComponent","hearts","lifes","inputLetters","words","wordsPossible","popLetter","quest","usedLetters","over","wordWin","getNumber","getWordsFetch","timesHeart","wordLenght","findPopLetter","index","push","findWordsPerQuant","arr","word","length","obj","arrAlf","arrNew","bigLetter","arra","i","j","substring","letterFrequency","s","chave","char","toLowerCase","undefined","letter","times","Biggest","big","isTrue","y","toLocaleUpperCase","verifyPosLetter","findNewPopLetter","isWin","shift","removeWord","isOver","isEqual","isDash","wordWinTemp","toUpperCase","window","location","reload","ShowInitialService","show","wordsFetch","fetch","res","clone","text","data","arrWords","split","numbers","num","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\n\nimport { ShowInitialService } from \"./show-initial.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  title = \"forca-game\";\n  // show: boolean = true;s\n\n  constructor(private showService: ShowInitialService) {}\n\n  // ngOnInit() {\n  //   this.show = this.showService.getShow();\n  //   console.log(\"showValue:\", this.show);\n  // }\n\n  showInicialGet() {\n    return this.showService.getShow();\n  }\n}\n","<app-initial *ngIf=\"showInicialGet()\">></app-initial>\r\n<app-principal *ngIf=\"!showInicialGet()\">></app-principal>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { InitialComponent } from \"./initial/initial.component\";\r\nimport { ShowInitialService } from \"./show-initial.service\";\nimport { PrincipalComponent } from './principal/principal.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, InitialComponent, PrincipalComponent],\r\n  imports: [BrowserModule, AppRoutingModule],\r\n  providers: [ShowInitialService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, Output } from \"@angular/core\";\n\nimport { ShowInitialService } from \"./../show-initial.service\";\nimport { stringify } from \"querystring\";\n\n@Component({\n  selector: \"app-initial\",\n  templateUrl: \"./initial.component.html\",\n  styleUrls: [\"./initial.component.css\"]\n})\nexport class InitialComponent implements OnInit {\n  // wordsFetch = [];\n  inputValue;\n\n  constructor(private showService: ShowInitialService) {}\n\n  salveNaumber(value) {\n    this.showService.setNumber(value);\n    this.inputValue = value;\n  }\n\n  clickOk(input) {\n    this.showService.setNumber(input);\n    this.inputValue = input;\n\n    console.log(\"valorInput: \", input);\n\n    let strInput = stringify(input);\n    if (\n      input <= 0 ||\n      input > 10 ||\n      input == \"undefined\" ||\n      input == \"null\" ||\n      input == \"\"\n    ) {\n      alert(\"Número deve ser maior que ZERO e menor que 10!\");\n    } else {\n      this.showService.setShow();\n      console.log(this.showService.getShow());\n    }\n    console.log(\"valorInput2: \", this.inputValue);\n  }\n\n  ngOnInit(): void {\n    // fetch(\n    //   \"https://raw.githubusercontent.com/felipejn/jogodaforca/master/palavras.txt\"\n    // )\n    //   .then(res => {\n    //     // console.log(res.clone().text());\n    //     return res.clone().text();\n    //   })\n    //   .then(data => {\n    //     let arrWords = data.split(\"\\n\");\n    //     console.log(arrWords);\n    //     this.wordsFetch = arrWords;\n    //   });\n  }\n}\n","<div class=\"d-block p-2 bg-dark text-white\">\n  <h3>FORCA APP</h3>\n</div>\n<div class=\"input-group mb-3\">\n  <input\n    #inputValue\n    id=\"letterNumber\"\n    type=\"number\"\n    class=\"form-control d-flex mt-3\"\n    placeholder=\"Quantas letras tem sua palavra?\"\n    aria-label=\"Quantas letras?\"\n    aria-describedby=\"button-addon2\"\n  />\n  <div class=\"input-group-append \">\n    <button\n      (click)=\"clickOk(inputValue.value)\"\n      class=\"btn btn-outline-secondary d-flex mt-3\"\n      type=\"button\"\n      id=\"button-addon2\"\n    >\n      OK\n    </button>\n  </div>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { ShowInitialService } from \"./../show-initial.service\";\nimport { stringify } from \"querystring\";\n\n@Component({\n  selector: \"app-principal\",\n  templateUrl: \"./principal.component.html\",\n  styleUrls: [\"./principal.component.css\"]\n})\nexport class PrincipalComponent implements OnInit {\n  hearts = [];\n  lifes: number = 10;\n  @Input() inputValue: number;\n  inputLetters = [];\n  words = [];\n  wordsPossible = [];\n  popLetter = \"\";\n  quest = true;\n  usedLetters = [];\n  over = \"game\";\n  wordWin = \"\";\n\n  constructor(private showService: ShowInitialService) {\n    this.inputValue = showService.getNumber();\n    this.words = showService.getWordsFetch();\n  }\n\n  ngOnInit(): void {\n    this.timesHeart(this.lifes);\n    //\n    this.wordLenght(this.inputValue);\n\n    this.findPopLetter();\n  }\n\n  timesHeart(lifes) {\n    for (let index = 0; index < lifes; index++) {\n      this.hearts.push(index);\n    }\n    console.log(\"qnt arr h:\", this.hearts);\n  }\n\n  wordLenght(inputValue) {\n    for (let index = 0; index < inputValue; index++) {\n      this.inputLetters.push(\"_\");\n    }\n    this.findWordsPerQuant(this.words);\n    console.log(\"qnt arr word lenght:\", this.inputLetters);\n  }\n\n  findWordsPerQuant(arr) {\n    for (const word of arr) {\n      if (word.length == this.inputValue) {\n        this.wordsPossible.push(word);\n      }\n    }\n    console.log(\"arr wordsPos\", this.wordsPossible);\n  }\n\n  findPopLetter() {\n    let obj = [];\n    let arrAlf = \"\";\n    let arrNew = \"\";\n    let bigLetter = \"\";\n    let arra = {};\n\n    for (const i of this.wordsPossible) {\n      for (let j = 0; j < i.length; j++) {\n        arrAlf += i.substring(j, j + 1);\n      }\n    }\n\n    function letterFrequency(s) {\n      for (let chave in s) {\n        let char = s[chave].toLowerCase();\n        if (arra[char] !== undefined) arra[char]++;\n        else arra[char] = 1;\n\n        obj.push({ letter: s[chave], times: arra[char] });\n      }\n\n      function Biggest() {\n        let big = 0;\n\n        for (const i of obj) {\n          if (i.times > big) {\n            big = i.times;\n            bigLetter = i.letter;\n          }\n        }\n        console.log(\"maior:\", obj);\n        console.log(\"pop:\", bigLetter);\n        console.log(\"arrrr:\", arrAlf);\n      }\n\n      Biggest();\n      // console.log(\"big:\", bigLetter);\n    }\n\n    letterFrequency(arrAlf);\n    this.popLetter = bigLetter;\n    console.log(\"pop:\", this.popLetter);\n  }\n  //-----------------\n  findNewPopLetter() {\n    let obj = [];\n    let arrAlf = \"\";\n    let arrNew = \"\";\n    let bigLetter = \"\";\n    let arra = {};\n\n    for (const i of this.wordsPossible) {\n      let isTrue = true;\n      // console.log(\"letrasUsadas  :\", this.usedLetters);\n      for (let j = 0; j < i.length; j++) {\n        for (const y of this.usedLetters) {\n          if (i[j] == y) {\n            isTrue = false;\n          }\n        }\n        if (isTrue) {\n          arrAlf += i[j];\n        }\n        isTrue = true;\n      }\n    }\n\n    function letterFrequency(s) {\n      for (let chave in s) {\n        let char = s[chave].toLowerCase();\n        if (arra[char] !== undefined) arra[char]++;\n        else arra[char] = 1;\n\n        obj.push({ letter: s[chave], times: arra[char] });\n      }\n\n      function Biggest() {\n        let big = 0;\n\n        for (const i of obj) {\n          if (i.times > big) {\n            big = i.times;\n            bigLetter = i.letter;\n          }\n        }\n        console.log(\"pop:\", bigLetter);\n        console.log(\"arrrr:\", arrAlf);\n        console.log(\"maior:\", obj);\n      }\n\n      Biggest();\n      // console.log(\"big:\", bigLetter);\n    }\n\n    letterFrequency(arrAlf);\n    this.popLetter = bigLetter;\n    console.log(\"pop:\", this.popLetter);\n  }\n\n  isGapInput(input) {\n    console.log(\"inp:\", input.value);\n    if (input.value != \"_\" || this.quest) return true;\n    else return false;\n  }\n\n  yes() {\n    this.quest = !this.quest;\n    this.usedLetters.push(this.popLetter);\n    console.log(\"inLet:\", this.inputLetters);\n  }\n\n  insertGapLetter(index) {\n    this.inputLetters[index] = this.popLetter.toLocaleUpperCase();\n    console.log(\"inLet after:\", this.inputLetters);\n    this.verifyPosLetter(index);\n  }\n\n  confirm() {\n    this.quest = !this.quest;\n    this.findNewPopLetter();\n    this.isWin();\n  }\n\n  verifyPosLetter(index) {\n    let arr = [];\n    for (const i of this.wordsPossible) {\n      if (i.substring(index, index + 1) == this.popLetter) {\n        arr.push(i);\n      }\n    }\n    this.wordsPossible = arr;\n    console.log(\"arrPoss: \", this.wordsPossible);\n  }\n\n  not() {\n    this.usedLetters.push(this.popLetter);\n    this.hearts.shift();\n    this.removeWord(this.popLetter);\n    this.findNewPopLetter();\n    this.isOver();\n  }\n\n  removeWord(letter) {\n    let arr = [];\n    let isEqual = true;\n\n    for (const i of this.wordsPossible) {\n      for (let j = 0; j < i.length; j++) {\n        if (i.substring(j, j + 1) == letter) {\n          isEqual = false;\n        }\n      }\n      if (isEqual == true) {\n        arr.push(i);\n      }\n    }\n    console.log(\"arr: \", arr);\n  }\n\n  isOver() {\n    if (this.hearts.length <= 0) {\n      this.over = \"over\";\n    }\n  }\n  isWin() {\n    let isDash = false;\n    let wordWinTemp = \"\";\n    console.log(\"input word:\", this.inputLetters);\n\n    for (const i of this.inputLetters) {\n      if (i == \"_\") {\n        isDash = true;\n      }\n      wordWinTemp += i;\n      console.log(\"input wordWin\", this.wordWin);\n    }\n    this.wordWin = wordWinTemp.toUpperCase();\n    if (!isDash) {\n      this.over = \"win\";\n    }\n  }\n\n  again() {\n    window.location.reload();\n  }\n}\n","<div [ngSwitch]=\"over\">\n  <div *ngSwitchCase=\"'game'\">\n    <div class=\"d-block p-2 bg-dark text-white\">\n      <h3>FORCA APP</h3>\n    </div>\n    <div class=\"container row justify-content-start\">\n      <h5>\n        Vidas: .\n      </h5>\n      <div id=\"life\">\n        <svg\n          *ngFor=\"let item of hearts\"\n          class=\"bi bi-heart-fill\"\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 16 16\"\n          fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      </div>\n    </div>\n\n    <div>\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">A palavra é? </span>\n        </div>\n\n        <!-- gaps -->\n        <input\n          #gapInput\n          [disabled]=\"isGapInput(gapInput)\"\n          readonly\n          *ngFor=\"let item of inputLetters; let i = index\"\n          (click)=\"insertGapLetter(i)\"\n          id=\"{{ i }}\"\n          type=\"text\"\n          aria-label=\"1 name\"\n          class=\"form-control text-center\"\n          value=\"{{ item }}\"\n        />\n      </div>\n    </div>\n\n    <div class=\"d-inline d-block\" *ngIf=\"quest\">\n      <h4 class=\"d-flex mt-3 mx-auto\">\n        Sua palavra tem a letra {{ popLetter.toUpperCase() }}?\n      </h4>\n      <button (click)=\"yes()\" type=\"button\" class=\"btn btn-success\">\n        Sim\n      </button>\n      <button (click)=\"not()\" type=\"button\" class=\"btn btn-danger\">Não</button>\n    </div>\n\n    <div class=\"d-inline d-block\" *ngIf=\"!quest\">\n      <h4 class=\"d-flex mt-3 mx-auto\">\n        Selecione as posições acima e confirme!\n      </h4>\n      <button (click)=\"confirm()\" type=\"button\" class=\"btn btn-success\">\n        Confirmar\n      </button>\n    </div>\n\n    <h5 class=\"d-flex mt-4\">Letras usadas:</h5>\n    <div\n      id=\"oldletter\"\n      class=\"jumbotron d-flex mt-2 justify-content-start align-items-start\"\n    >\n      <h5\n        class=\"text-uppercase font-weight-bold \"\n        *ngFor=\"let item of usedLetters\"\n      >\n        {{ item }} -\n      </h5>\n    </div>\n  </div>\n\n  <div *ngSwitchCase=\"'win'\">\n    <div class=\"d-block p-2 bg-dark text-white\">\n      <h3>FORCA APP</h3>\n    </div>\n    <div\n      class=\"alert alert-warning alert-dismissible fade show mt-2\"\n      role=\"alert\"\n    >\n      <h3>A palavra que você escolheu foi</h3>\n      <h2>{{ wordWin }}!</h2>\n      Tente mais uma vez, talvez na próxima consiga ganhar!\n      <button\n        (click)=\"again()\"\n        type=\"button\"\n        class=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  </div>\n\n  <div *ngSwitchCase=\"'over'\">\n    <div class=\"d-block p-2 bg-dark text-white\">\n      <h3>FORCA APP</h3>\n    </div>\n    <div\n      class=\"alert alert-success alert-dismissible fade show mt-2\"\n      role=\"alert\"\n    >\n      <h4 class=\"alert-heading\">Parabéns!</h4>\n      <p>\n        Não consegui acertar sua palavra.\n      </p>\n      <hr />\n      <p class=\"mb-0\">\n        Talvez na próxima eu consiga!\n      </p>\n      <button\n        (click)=\"again()\"\n        type=\"button\"\n        class=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Injectable, Output } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ShowInitialService {\n  show: boolean = true;\n  numbers: number;\n  wordsFetch = [];\n\n  constructor() {\n    fetch(\n      \"https://raw.githubusercontent.com/felipejn/jogodaforca/master/palavras.txt\"\n    )\n      .then(res => {\n        // console.log(res.clone().text());\n        return res.clone().text();\n      })\n      .then(data => {\n        let arrWords = data.split(\"\\n\");\n        console.log(arrWords);\n        this.wordsFetch = arrWords;\n      });\n  }\n\n  getWordsFetch() {\n    return this.wordsFetch;\n  }\n\n  getNumber() {\n    return this.numbers;\n  }\n  setNumber(num) {\n    this.numbers = num;\n  }\n\n  getShow() {\n    return this.show;\n  }\n\n  setShow() {\n    this.show = !this.show;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}