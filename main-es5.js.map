{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/admin/list/list.component.ts","webpack:///src/app/components/admin/list/list.component.html","webpack:///src/app/components/admin/users-list/users-list.component.ts","webpack:///src/app/components/admin/users-list/users-list.component.html","webpack:///src/app/components/detail/detail.component.ts","webpack:///src/app/components/detail/detail.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/modals/modal-new-doc/modal-new-doc.component.ts","webpack:///src/app/components/modals/modal-new-doc/modal-new-doc.component.html","webpack:///src/app/components/modals/modal-new-user/modal-new-user.component.ts","webpack:///src/app/components/modals/modal-new-user/modal-new-user.component.html","webpack:///src/app/components/modals/modal-update/modal-update.component.ts","webpack:///src/app/components/modals/modal-update/modal-update.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/user/login/login.component.ts","webpack:///src/app/components/user/login/login.component.html","webpack:///src/app/guards/admin.guard.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/data-api.service.ts","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","ListComponent","dataApi","authService","isAdmin","userUid","userAcess","clienteSelected","getListDocs","getCurrentUser","isAuth","subscribe","auth","uid","isUserAdmin","userRole","console","log","admin","acessos","DocsFilterGroup","getAllLDocumentos","docs","forEach","item","acess","grupo","push","documentosFilterGroup","filterProducts","documentos","filterDocsByGroup","idDocumento","confirmDelete","confirm","deleteDocumento","documento","selectedDocumento","Object","assign","cliente","arrProducts","doc","includes","produto","productsFilter","UsersListComponent","getListUsers","getAllLUser","users","utilizadores","user","DetailComponent","route","snapshot","params","getDetail","getOneDocumento","HomeComponent","ModalNewDocComponent","router","storage","ID","Math","random","toString","substring","FILE","target","files","FILEPATH","REF","ref","TASK","upload","upLoadPercent","percentageChanges","snapshotChanges","pipe","urlUpload","getDownloadURL","newDocForm","value","ficheiro","urlDbDoc","nativeElement","addDocumento","resetForm","btnClose","click","onAddDoc","onUpload","ModalNewUserComponent","email","password","newUserForm","registerUser","selectedUser","name","res","onAddUser","ModalUpdateComponent","updateDocumento","onUpdateDoc","NavbarComponent","afsAuth","app_name","isLogged","userName","logoutUser","navigate","LoginComponent","afAuth","isError","loginEmailUser","err","message","onLogin","AdminGuard","next","state","authState","providedIn","AuthGuard","AuthService","afs","pass","rej","createUserWithEmailAndPassword","userData","updateUserData","signInWithEmailAndPassword","signOut","userRef","data","set","merge","valueChanges","DataApiService","selectedlog","documentosCollection","collection","utilizadoresCollection","logsCollection","logs","changes","map","action","payload","documentoDoc","exists","add","update","usersDb","idUser","userDoc","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { UsersListComponent } from \"./components/admin/users-list/users-list.component\";\nimport { DetailComponent } from \"./components/detail/detail.component\";\nimport { LoginComponent } from \"./components/user/login/login.component\";\nimport { ListComponent } from \"./components/admin/list/list.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { AdminGuard } from \"./guards/admin.guard\";\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent, canActivate: [AuthGuard] },\n  { path: \"list\", component: ListComponent, canActivate: [AuthGuard] },\n  { path: \"doc/:id\", component: DetailComponent, canActivate: [AuthGuard] },\n  { path: \"user/login\", component: LoginComponent },\n  {\n    path: \"admin/usersList\",\n    component: UsersListComponent,\n    canActivate: [AuthGuard, AdminGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'releasesGG';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { ModalNewUserComponent } from \"./components/modals/modal-new-user/modal-new-user.component\";\n\nimport { environment } from \"./../environments/environment.prod\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ListComponent } from \"./components/admin/list/list.component\";\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\n\nimport { LoginComponent } from \"./components/user/login/login.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireDatabaseModule } from \"@angular/fire/database\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport {\n  AngularFirestore,\n  AngularFirestoreModule,\n} from \"@angular/fire/firestore\";\nimport { DetailComponent } from \"./components/detail/detail.component\";\nimport { ModalNewDocComponent } from \"./components/modals/modal-new-doc/modal-new-doc.component\";\nimport { ModalUpdateComponent } from \"./components/modals/modal-update/modal-update.component\";\nimport { UsersListComponent } from \"./components/admin/users-list/users-list.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    NavbarComponent,\n    LoginComponent,\n    HomeComponent,\n    DetailComponent,\n    ModalNewDocComponent,\n    ModalUpdateComponent,\n    UsersListComponent,\n    ModalNewUserComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n    AngularFirestoreModule,\n  ],\n  providers: [AngularFireAuth, AngularFirestore],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { auth } from \"firebase/app\";\nimport { AuthService } from \"./../../../services/auth.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\n\nimport { DataApiService } from \"./../../../services/data-api.service\";\nimport { DocInterface } from \"./../../../models/doc\";\nimport { IfStmt } from \"@angular/compiler\";\n\n@Component({\n  selector: \"app-list\",\n  templateUrl: \"./list.component.html\",\n  styleUrls: [\"./list.component.css\"],\n})\nexport class ListComponent implements OnInit {\n  public documentos: DocInterface[];\n  public documentosFilterGroup: DocInterface[];\n  public isAdmin: any = null;\n  public userUid: string = null;\n  public userAcess: any = [];\n  public clienteSelected: string = \"TODOS\";\n  public productsFilter: any[];\n\n  constructor(\n    public dataApi: DataApiService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.getListDocs();\n    this.getCurrentUser();\n\n    // console.log(\"AdminUser:\", this.dataApi.getOneUser());\n  }\n\n  getCurrentUser() {\n    this.authService.isAuth().subscribe((auth) => {\n      if (auth) {\n        this.userUid = auth.uid;\n\n        this.authService.isUserAdmin(this.userUid).subscribe((userRole) => {\n          console.log(\"userRole\", userRole);\n          this.isAdmin = userRole.admin;\n          console.log(\"Admin:\", this.isAdmin);\n          this.userAcess = userRole.acessos;\n          console.log(\"acess:\", this.userAcess);\n        });\n      }\n    });\n  }\n\n  filterDocsByGroup() {\n    let DocsFilterGroup = [];\n    this.dataApi.getAllLDocumentos().subscribe((docs) => {\n      docs.forEach((item) => {\n        this.userAcess.forEach((acess) => {\n          if (item.grupo == acess) {\n            DocsFilterGroup.push(item);\n          }\n        });\n      });\n      this.documentosFilterGroup = DocsFilterGroup;\n      console.log(\"docsFilterGroup: \", this.documentosFilterGroup);\n      this.filterProducts(DocsFilterGroup);\n    });\n  }\n\n  getListDocs() {\n    this.dataApi.getAllLDocumentos().subscribe((docs) => {\n      this.documentos = docs;\n      this.filterDocsByGroup();\n    });\n  }\n\n  onDeleteDoc(idDocumento: string) {\n    console.log(\"DELETE DOC \", idDocumento);\n    const confirmDelete = confirm(\"Tem certeza que deseja apagar?\");\n    if (confirmDelete) {\n      // console.log(\"deleteConfirm\");\n      this.dataApi.deleteDocumento(idDocumento);\n    }\n  }\n\n  onPreUpdateDoc(documento: DocInterface) {\n    console.log(\"DOC \", documento);\n    this.dataApi.selectedDocumento = Object.assign({}, documento);\n  }\n\n  isSameClient(cliente) {\n    if (this.clienteSelected == \"TODOS\") {\n      // console.log(\"CLIENTE todos: \", cliente, this.clienteSelected, true);\n\n      return true;\n    } else if (cliente == this.clienteSelected) {\n      // console.log(\"CLIENTE igual: \", cliente, this.clienteSelected, true);\n      return true;\n    } else if (cliente != this.clienteSelected) {\n      // console.log(\"CLIENTE diferente: \", cliente, this.clienteSelected, false);\n      return false;\n    } else {\n      // console.log(\"CLIENTE false: \", cliente, this.clienteSelected, false);\n      return false;\n    }\n  }\n\n  filterProducts(docs) {\n    let arrProducts = [];\n\n    docs.forEach((doc) => {\n      // console.log(\"*********doc**********\", doc);\n\n      if (!arrProducts.includes(doc.produto)) {\n        arrProducts.push(doc.produto);\n      }\n    });\n    this.productsFilter = arrProducts;\n    console.log(\"productsFilter\", this.productsFilter);\n  }\n\n  isSameProd(documento, produto) {\n    console.log(produto, documento.produto);\n    if (produto == documento.produto) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","<section class=\"row mt-5\">\r\n  <div class=\"mt-1 container\">\r\n    <h4 class=\"text-danger\">AVISOS</h4>\r\n    <div class=\"alert alert-danger\" role=\"alert\">\r\n      <table>\r\n        <tbody\r\n          class=\"table table-hover text-center\"\r\n          *ngFor=\"let doc of documentos; index as i\"\r\n        >\r\n          <tr class=\"mb-1\">\r\n            <th scope=\"row\">{{ i + 1 }}</th>\r\n            <td>{{ doc.grupo }}</td>\r\n            <td>{{ doc.cliente }}</td>\r\n            <td>{{ doc.projeto }}</td>\r\n            <td>{{ doc.descricao }}</td>\r\n            <td>{{ doc.status }}</td>\r\n            <td>{{ doc.atualizacao }}</td>\r\n            <td>{{ doc.aviso }}</td>\r\n\r\n            <td>\r\n              <a\r\n                target=\"_blank\"\r\n                href=\"{{ doc.ficheiro }}\"\r\n                class=\"btn btn-success\"\r\n                >Download</a\r\n              >\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- hr -->\r\n\r\n  <hr size=\"30\" />\r\n  <hr size=\"30\" />\r\n  <hr size=\"30\" />\r\n\r\n  <!-- clientes -->\r\n  <div class=\"mt-5 container\">\r\n    <div class=\"input-group mb-3\">\r\n      <div class=\"input-group-prepend\">\r\n        <label class=\"input-group-text\" for=\"inputGroupSelect01\"\r\n          >Selecione o cliente</label\r\n        >\r\n      </div>\r\n      <select\r\n        class=\"custom-select\"\r\n        id=\"inputGroupSelect01\"\r\n        #clienteSelected_\r\n        [(ngModel)]=\"clienteSelected\"\r\n      >\r\n        <option value=\"TODOS\">(TODOS)</option>\r\n        <option value=\"NAO\">NAO</option>\r\n        <option value=\"LE NOUY\">LE NOUY</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- documentos -->\r\n\r\n  <div class=\"container\">\r\n    <div>\r\n      <button\r\n        class=\"btn btn-primary float-right mb-3\"\r\n        *ngIf=\"isAdmin\"\r\n        data-toggle=\"modal\"\r\n        data-target=\"#modalNewDoc\"\r\n      >\r\n        Novo Documento\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngFor=\"let prod of productsFilter\">\r\n      <div>\r\n        <h5 class=\"text-primary mb-1 mt-3\">{{ prod }}</h5>\r\n      </div>\r\n\r\n      <table class=\"table table-hover text-center\">\r\n        <thead>\r\n          <tr class=\"table-dark\">\r\n            <th scope=\"col\">Grupo</th>\r\n            <th scope=\"col\">Cliente</th>\r\n            <th scope=\"col\">Produto</th>\r\n            <th scope=\"col\">Descrição</th>\r\n            <th scope=\"col\">Status</th>\r\n            <th scope=\"col\">Atualização</th>\r\n            <th scope=\"col\">Aviso</th>\r\n            <th scope=\"col\">Ficheiro</th>\r\n            <th scope=\"col\">&nbsp;</th>\r\n            <th scope=\"col\">&nbsp;</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let doc of documentosFilterGroup; index as i\">\r\n            <td *ngIf=\"isSameClient(doc.cliente) && isSameProd(doc, prod)\">\r\n              {{ doc.grupo }}\r\n            </td>\r\n            <td *ngIf=\"isSameClient(doc.cliente) && isSameProd(doc, prod)\">\r\n              {{ doc.cliente }}\r\n            </td>\r\n            <td *ngIf=\"isSameClient(doc.cliente) && isSameProd(doc, prod)\">\r\n              {{ doc.produto }}\r\n            </td>\r\n            <td *ngIf=\"isSameClient(doc.cliente) && isSameProd(doc, prod)\">\r\n              {{ doc.descricao }}\r\n            </td>\r\n            <td *ngIf=\"isSameClient(doc.cliente) && isSameProd(doc, prod)\">\r\n              {{ doc.status }}\r\n            </td>\r\n            <td *ngIf=\"isSameClient(doc.cliente) && isSameProd(doc, prod)\">\r\n              {{ doc.atualizacao }}\r\n            </td>\r\n            <td *ngIf=\"isSameClient(doc.cliente) && isSameProd(doc, prod)\">\r\n              {{ doc.aviso }}\r\n            </td>\r\n\r\n            <td *ngIf=\"isSameClient(doc.cliente) && isSameProd(doc, prod)\">\r\n              <a\r\n                target=\"_blank\"\r\n                href=\"{{ doc.ficheiro }}\"\r\n                class=\"btn btn-success\"\r\n                >Download</a\r\n              >\r\n            </td>\r\n            <td *ngIf=\"isSameClient(doc.cliente) && isSameProd(doc, prod)\">\r\n              <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isAdmin\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#modalUpdate\"\r\n                (click)=\"onPreUpdateDoc(doc)\"\r\n              >\r\n                Atualizar\r\n              </button>\r\n            </td>\r\n            <td *ngIf=\"isSameClient(doc.cliente) && isSameProd(doc, prod)\">\r\n              <button\r\n                class=\"btn btn-danger\"\r\n                *ngIf=\"isAdmin\"\r\n                (click)=\"onDeleteDoc(doc.id)\"\r\n              >\r\n                Apagar\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</section>\r\n<app-modal-new-doc></app-modal-new-doc>\r\n<app-modal-update></app-modal-update>\r\n","import { UserInterface } from \"./../../../models/user\";\nimport { auth } from \"firebase/app\";\nimport { AuthService } from \"./../../../services/auth.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\n\nimport { DataApiService } from \"./../../../services/data-api.service\";\n\n@Component({\n  selector: \"app-users-list\",\n  templateUrl: \"./users-list.component.html\",\n  styleUrls: [\"./users-list.component.css\"],\n})\nexport class UsersListComponent implements OnInit {\n  public utilizadores: UserInterface[];\n  public isAdmin: any = null;\n  public userUid: string = null;\n\n  constructor(\n    public dataApi: DataApiService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.getListUsers();\n    this.getCurrentUser();\n  }\n\n  getCurrentUser() {\n    this.authService.isAuth().subscribe((auth) => {\n      if (auth) {\n        this.userUid = auth.uid;\n        this.authService.isUserAdmin(this.userUid).subscribe((userRole) => {\n          this.isAdmin = userRole.admin;\n        });\n      }\n    });\n  }\n\n  //////////\n  getListUsers() {\n    this.dataApi.getAllLUser().subscribe((users) => {\n      this.utilizadores = users;\n    });\n  }\n\n  onDeleteUser(idDocumento: string) {\n    console.log(\"DELETE DOC \", idDocumento);\n    const confirmDelete = confirm(\"Tem certeza que deseja apagar?\");\n    if (confirmDelete) {\n      // console.log(\"deleteConfirm\");\n      this.dataApi.deleteDocumento(idDocumento);\n    }\n  }\n\n  onPreUpdateUser(user: UserInterface) {\n    console.log(\"DOC \", user);\n    this.dataApi.selectedDocumento = Object.assign({}, user);\n  }\n}\n","<section class=\"row mt-5\">\n  <div class=\"col\">\n    <button\n      class=\"btn btn-primary float-right mb-3\"\n      data-toggle=\"modal\"\n      data-target=\"#modalNewUser\"\n    >\n      Novo Utilizador\n    </button>\n    {{ isAdmin }}\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Nome</th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">Password</th>\n          <th scope=\"col\">Admin</th>\n          <th scope=\"col\">&nbsp;</th>\n          <th scope=\"col\">&nbsp;</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let user of utilizadores; index as i\">\n          <th scope=\"row\">{{ i + 1 }}</th>\n          <td>{{ user.name }}</td>\n          <td>{{ user.email }}</td>\n          <td>{{ user.password }}</td>\n          <td>{{ user.admin }}</td>\n          <td>\n            <button\n              class=\"btn btn-primary\"\n              data-toggle=\"modal\"\n              data-target=\"#modalUpdate\"\n              (click)=\"onPreUpdateUser(user)\"\n            >\n              Update\n            </button>\n          </td>\n          <td>\n            <button class=\"btn btn-danger\" (click)=\"onDeleteUser(user.id)\">\n              Apagar\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</section>\n<app-modal-new-user></app-modal-new-user>\n","import { Router } from \"@angular/router\";\nimport { DocInterface } from \"./../../models/doc\";\nimport { DataApiService } from \"./../../services/data-api.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params } from \"@angular/router\";\n\n@Component({\n  selector: \"app-detail\",\n  templateUrl: \"./detail.component.html\",\n  styleUrls: [\"./detail.component.css\"],\n})\nexport class DetailComponent implements OnInit {\n  public documento: DocInterface = {};\n\n  constructor(private dataApi: DataApiService, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    const idDocumento = this.route.snapshot.params[\"id\"];\n    this.getDetail(idDocumento);\n  }\n\n  getDetail(idDocumento: string): void {\n    this.dataApi.getOneDocumento(idDocumento).subscribe((documento) => {\n      console.log(\"Detalhe Doc\", documento);\n      this.documento = documento;\n    });\n  }\n}\n","{{ documento | json }}\n","import { DataApiService } from \"./../../services/data-api.service\";\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"],\n})\nexport class HomeComponent implements OnInit {\n  public documentos = [];\n  public documento = \"\";\n\n  constructor(private dataApi: DataApiService) {}\n\n  ngOnInit() {\n    this.dataApi.getAllLDocumentos().subscribe((documentos) => {\n      console.log(\"DOCS\", documentos);\n      this.documentos = documentos;\n    });\n  }\n}\n","<section id=\"books\">\n  <div class=\"container mt-5\">\n    <div class=\"row mt-5\">\n      <div>\n        <label for=\"produto\">Produto</label>\n        <select name=\"produto\" name=\"cliente\">\n          <option *ngFor=\"let doc of documentos\" value=\"{{ doc }}\">{{\n            doc\n          }}</option>\n        </select>\n      </div>\n      <div>\n        <label for=\"cliente\">Cliente</label>\n        <select name=\"cliente\" name=\"cliente\">\n          <option *ngFor=\"let doc of documentos\" value=\"{{ doc }}\">{{\n            doc\n          }}</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- outro -->\n    <!-- <div class=\"row mt-5\">\n      <div class=\"col-xs-12 col-sm-6 col-md-4\" *ngFor=\"let doc of documentos\">\n        <div class=\"card_book\">\n          <div class=\"card\">\n            <div class=\"card-body text-center\">\n              <div class=\"card-title\">\n                produtos\n              </div>\n              <p class=\"card-text\">\n                {{ doc.desc }}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div> -->\n  </div>\n</section>\n","import { Observable } from \"rxjs\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { AuthService } from \"./../../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\n\nimport { DocInterface } from \"./../../../models/doc\";\nimport { DataApiService } from \"./../../../services/data-api.service\";\nimport { NodeWithI18n } from \"@angular/compiler\";\nimport { resetFakeAsyncZone } from \"@angular/core/testing\";\nimport { AngularFireStorage } from \"@angular/fire/storage\";\nimport { finalize } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-modal-new-doc\",\n  templateUrl: \"./modal-new-doc.component.html\",\n  styleUrls: [\"./modal-new-doc.component.css\"],\n})\nexport class ModalNewDocComponent implements OnInit {\n  @ViewChild(\"btnClose\") btnClose: ElementRef;\n  @ViewChild(\"urlDbDoc\") urlDbDoc: ElementRef;\n\n  upLoadPercent: Observable<number>;\n  urlUpload: Observable<string>;\n\n  constructor(\n    public dataApi: DataApiService,\n    private router: Router,\n    private authService: AuthService,\n    private storage: AngularFireStorage\n  ) {}\n\n  ngOnInit(): void {}\n\n  onUpload(e) {\n    // console.log(\"UPLOAD: \", e.target.files[0]);\n    const ID = Math.random().toString(36).substring(2);\n    const FILE = e.target.files[0];\n    const FILEPATH = `upload/doc_${ID}`;\n    const REF = this.storage.ref(FILEPATH);\n    const TASK = this.storage.upload(FILEPATH, FILE);\n    this.upLoadPercent = TASK.percentageChanges();\n    TASK.snapshotChanges()\n      .pipe(\n        finalize(() => {\n          this.urlUpload = REF.getDownloadURL();\n        })\n      )\n      .subscribe();\n  }\n\n  onAddDoc(newDocForm: NgForm) {\n    newDocForm.value.ficheiro = this.urlDbDoc.nativeElement.value;\n    this.dataApi.addDocumento(newDocForm.value);\n\n    newDocForm.resetForm();\n    this.btnClose.nativeElement.click();\n  }\n}\n","<div\n  class=\"modal fade\"\n  id=\"modalNewDoc\"\n  tabindex=\"-1\"\n  role=\"dialog\"\n  aria-labelledby=\"exampleModalLabel\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Novo Documento</h5>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          aria-label=\"Close\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form #newDocForm=\"ngForm\" (ngSubmit)=\"onAddDoc(newDocForm)\">\n          <!-- ID -->\n          <!-- <input\n            type=\"text\"\n            name=\"id\"\n            hidden\n            [(ngModel)]=\"this.dataApi.selectedDocumento.id\"\n          /> -->\n          <!-- grupo -->\n          <div class=\"form-group\">\n            <label for=\"grupo\">Grupo</label>\n            <select\n              name=\"grupo\"\n              class=\"form-control\"\n              [(ngModel)]=\"this.dataApi.selectedDocumento.grupo\"\n            >\n              <option value=\"GG\">GG</option>\n              <option value=\"Portaluxe\">Portaluxe</option>\n            </select>\n          </div>\n          <!-- cliente -->\n          <div class=\"form-group\">\n            <label for=\"cliente\" class=\"col-form-label\">Cliente</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"cliente\"\n              [(ngModel)]=\"this.dataApi.selectedDocumento.cliente\"\n            />\n          </div>\n          <!-- projeto | status -->\n          <div class=\"form-row\">\n            <!-- projeto -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"projeto\">Projeto</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"projeto\"\n                [(ngModel)]=\"this.dataApi.selectedDocumento.projeto\"\n              />\n            </div>\n            <!-- status -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"status\">Status</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"status\"\n                [(ngModel)]=\"this.dataApi.selectedDocumento.status\"\n              />\n            </div>\n          </div>\n          <!-- descricao -->\n          <div class=\"form-group\">\n            <label for=\"descricao\" class=\"col-form-label\">Descrição:</label>\n            <textarea\n              class=\"form-control\"\n              name=\"descricao\"\n              [(ngModel)]=\"this.dataApi.selectedDocumento.descricao\"\n            ></textarea>\n          </div>\n          <!-- atualizacao | upload -->\n          <div class=\"form-row\">\n            <!-- atualizacao -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"atualizacao\" class=\"col-form-label\"\n                >Atualização:</label\n              >\n              <input\n                type=\"date\"\n                class=\"form-control\"\n                name=\"atualizacao\"\n                [(ngModel)]=\"this.dataApi.selectedDocumento.atualizacao\"\n              />\n            </div>\n            <!-- ficheiro -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"ficheiro\" class=\"col-form-label\">Ficheiro:</label>\n              <input\n                type=\"file\"\n                accept=\".pdf\"\n                class=\"form-control\"\n                name=\"up\"\n                (change)=\"onUpload($event)\"\n              />\n              <input\n                #urlDbDoc\n                type=\"hidden\"\n                name=\"ficheiro\"\n                [value]=\"urlUpload | async\"\n              />\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              #btnClose\n              data-dismiss=\"modal\"\n            >\n              Fechar\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary\">Criar</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { AuthService } from \"./../../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\n\nimport { DocInterface } from \"./../../../models/doc\";\nimport { DataApiService } from \"./../../../services/data-api.service\";\nimport { NodeWithI18n } from \"@angular/compiler\";\nimport { resetFakeAsyncZone } from \"@angular/core/testing\";\n\n@Component({\n  selector: \"app-modal-new-user\",\n  templateUrl: \"./modal-new-user.component.html\",\n  styleUrls: [\"./modal-new-user.component.css\"],\n})\nexport class ModalNewUserComponent implements OnInit {\n  @ViewChild(\"btnClose\") btnClose: ElementRef;\n  public email: string = \"\";\n  public password: string = \"\";\n\n  constructor(\n    public dataApi: DataApiService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {}\n\n  onAddUser(newUserForm: NgForm) {\n    this.authService\n      .registerUser(\n        this.dataApi.selectedUser.email,\n        this.dataApi.selectedUser.password,\n        this.dataApi.selectedUser.admin,\n        this.dataApi.selectedUser.name\n      )\n      .then((res) => {\n        console.log(\"register ok\");\n        // this.dataApi.addUser(newUserForm.value);\n        console.log(\"valor \", newUserForm.value);\n        newUserForm.resetForm();\n        this.btnClose.nativeElement.click();\n      });\n  }\n}\n","<div\n  class=\"modal fade\"\n  id=\"modalNewUser\"\n  tabindex=\"-1\"\n  role=\"dialog\"\n  aria-labelledby=\"exampleModalLabel\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Novo Utilizador</h5>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          aria-label=\"Close\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form #newUserForm=\"ngForm\" (ngSubmit)=\"onAddUser(newUserForm)\">\n          <!-- ID -->\n          <!-- <input\n            type=\"text\"\n            name=\"id\"\n            hidden\n            [(ngModel)]=\"this.dataApi.selectedUser.id\"\n          /> -->\n          <!-- nome -->\n          <div class=\"form-group\">\n            <label for=\"name\" class=\"col-form-label\">Nome</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"name\"\n              [(ngModel)]=\"this.dataApi.selectedUser.name\"\n            />\n          </div>\n          <!-- email -->\n          <div class=\"form-group\">\n            <label for=\"cliente\" class=\"col-form-label\">Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              name=\"email\"\n              [(ngModel)]=\"this.dataApi.selectedUser.email\"\n            />\n          </div>\n          <!-- pass | admin -->\n          <div class=\"form-row\">\n            <!-- pass -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"projeto\">Password</label>\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                name=\"pass\"\n                [(ngModel)]=\"this.dataApi.selectedUser.password\"\n              />\n            </div>\n            <!-- admin -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"status\">Admin</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"admin\"\n                [(ngModel)]=\"this.dataApi.selectedUser.admin\"\n              />\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              #btnClose\n              data-dismiss=\"modal\"\n            >\n              Fechar\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary\">Criar</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\n\nimport { DocInterface } from \"./../../../models/doc\";\nimport { DataApiService } from \"./../../../services/data-api.service\";\nimport { NodeWithI18n } from \"@angular/compiler\";\n\n@Component({\n  selector: \"app-modal-update\",\n  templateUrl: \"./modal-update.component.html\",\n  styleUrls: [\"./modal-update.component.css\"],\n})\nexport class ModalUpdateComponent implements OnInit {\n  @ViewChild(\"btnClose\") btnClose: ElementRef;\n\n  constructor(public dataApi: DataApiService) {}\n\n  ngOnInit(): void {}\n\n  onUpdateDoc(newDocForm: NgForm) {\n    this.dataApi.updateDocumento(newDocForm.value);\n    newDocForm.resetForm();\n    this.btnClose.nativeElement.click();\n  }\n}\n","<div\n  class=\"modal fade\"\n  id=\"modalUpdate\"\n  tabindex=\"-1\"\n  role=\"dialog\"\n  aria-labelledby=\"exampleModalLabel\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Atualizar Documento</h5>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          aria-label=\"Close\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form #newDocForm=\"ngForm\" (ngSubmit)=\"onUpdateDoc(newDocForm)\">\n          <!-- ID -->\n          <input\n            type=\"text\"\n            name=\"id\"\n            hidden\n            [(ngModel)]=\"this.dataApi.selectedDocumento.id\"\n          />\n          <!-- grupo -->\n          <div class=\"form-group\">\n            <label for=\"grupo\">Grupo</label>\n            <select\n              name=\"grupo\"\n              class=\"form-control\"\n              [(ngModel)]=\"this.dataApi.selectedDocumento.grupo\"\n            >\n              <option value=\"GG\">GG</option>\n              <option value=\"Portaluxe\">Portaluxe</option>\n            </select>\n          </div>\n          <!-- cliente -->\n          <div class=\"form-group\">\n            <label for=\"cliente\" class=\"col-form-label\">Cliente</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"cliente\"\n              [(ngModel)]=\"this.dataApi.selectedDocumento.cliente\"\n            />\n          </div>\n          <!-- projeto | status -->\n          <div class=\"form-row\">\n            <!-- projeto -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"projeto\">Projeto</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"projeto\"\n                [(ngModel)]=\"this.dataApi.selectedDocumento.projeto\"\n              />\n            </div>\n            <!-- status -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"status\">Status</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"status\"\n                [(ngModel)]=\"this.dataApi.selectedDocumento.status\"\n              />\n            </div>\n          </div>\n          <!-- descricao -->\n          <div class=\"form-group\">\n            <label for=\"descricao\" class=\"col-form-label\">Descrição:</label>\n            <textarea\n              class=\"form-control\"\n              name=\"descricao\"\n              [(ngModel)]=\"this.dataApi.selectedDocumento.descricao\"\n            ></textarea>\n          </div>\n          <!-- atualizacao | upload -->\n          <div class=\"form-row\">\n            <!-- atualizacao -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"atualizacao\" class=\"col-form-label\"\n                >Atualização:</label\n              >\n              <input\n                type=\"date\"\n                class=\"form-control\"\n                name=\"atualizacao\"\n                [(ngModel)]=\"this.dataApi.selectedDocumento.atualizacao\"\n              />\n            </div>\n            <!-- ficheiro -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"ficheiro\" class=\"col-form-label\">Ficheiro:</label>\n              <input\n                type=\"file\"\n                class=\"form-control\"\n                name=\"ficheiro\"\n                [(ngModel)]=\"this.dataApi.selectedDocumento.ficheiro\"\n              />\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              #btnClose\n              data-dismiss=\"modal\"\n            >\n              Fechar\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary\">Atualizar</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Router } from \"@angular/router\";\nimport { auth } from \"firebase/app\";\nimport { AuthService } from \"./../../services/auth.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.css\"],\n})\nexport class NavbarComponent implements OnInit {\n  public app_name: string = \"Documentos GardenGate\";\n  public isLogged: boolean = false;\n  public isAdmin: any = null;\n  public userUid: string = null;\n  public userName: string = null;\n\n  constructor(\n    private authService: AuthService,\n    private afsAuth: AngularFireAuth,\n    private router: Router\n  ) {\n    this.getCurrentUser();\n  }\n\n  ngOnInit(): void {\n    this.getCurrentUser();\n  }\n\n  getCurrentUser() {\n    this.authService.isAuth().subscribe((auth) => {\n      if (auth) {\n        console.log(\"user Logged\");\n        this.isLogged = true;\n        this.userUid = auth.uid;\n        this.authService.isUserAdmin(this.userUid).subscribe((userRole) => {\n          this.isAdmin = userRole.admin;\n          this.userName = userRole.name;\n        });\n      } else {\n        console.log(\"NOT user logged\");\n        this.isLogged = false;\n      }\n    });\n  }\n\n  onLogout() {\n    this.authService.logoutUser();\n    this.router.navigate([\"/user/login\"]);\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n  <a class=\"navbar-brand\" routerLink=\"\">{{ app_name }}</a>\n  <!-- <div class=\"nav-item\" *ngIf=\"isLogged\">Bem-Vindo :{{ userName }}</div> -->\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#mainNavbar\"\n    aria-controls=\"mainNavbar\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"mainNavbar\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" *ngIf=\"isLogged\" hidden>\n        <a class=\"nav-link\" routerLink=\"/offers\">Offers </a>\n      </li>\n    </ul>\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item\" *ngIf=\"!isLogged\" hidden>\n        <a class=\"nav-link\" routerLink=\"/user/register\">Register </a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"isLogged\">\n        <a class=\"nav-link\" routerLink=\"/list\">Documentos</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"isLogged && isAdmin\">\n        <a class=\"nav-link\" routerLink=\"/admin/usersList\">Utilizadores</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"!isLogged\">\n        <a class=\"nav-link\" routerLink=\"/user/login\">Login </a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"isLogged\">\n        <a href=\"#\" class=\"nav-link\" (click)=\"onLogout()\">Logout </a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { AuthService } from \"./../../../services/auth.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { auth } from \"firebase/app\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  public email: string = \"\";\n  public password: string = \"\";\n  isError = false;\n\n  constructor(\n    public afAuth: AngularFireAuth,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {}\n\n  onLogin(): void {\n    console.log(\"email\", this.email);\n    console.log(\"pass\", this.password);\n    this.authService\n      .loginEmailUser(this.email, this.password)\n      .then((res) => {\n        this.router.navigate([\"\"]);\n      })\n      .catch((err) => console.log(\"err\", err.message));\n  }\n\n  onLogout() {\n    this.authService.logoutUser();\n  }\n}\n","<section id=\"login\" class=\"mb-5 mt-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-xs-12 col-sm-6 col-md-4 mx-auto\">\n        <div class=\"card_login\">\n          <div class=\"card\">\n            <div class=\"card-body text-center\">\n              <form #formLogin=\"ngForm\" (ngSubmit)=\"onLogin()\">\n                <h1 class=\"h3 mb-3 font-weight-normal\" *ngIf=\"!isError\">\n                  Login\n                </h1>\n                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"isError\">\n                  Something is wrong!\n                </div>\n                <div class=\"form-group\">\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    class=\"form-control\"\n                    placeholder=\"Email\"\n                    [(ngModel)]=\"email\"\n                    required\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    class=\"form-control\"\n                    placeholder=\"Password\"\n                    [(ngModel)]=\"password\"\n                    required\n                  />\n                </div>\n                <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">\n                  Login\n                </button>\n                <div class=\"form-group\">\n                  <a routerLink=\"/user/register\" class=\"form-control login-user\"\n                    >Are you new ?</a\n                  >\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Router } from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { take, map, tap } from \"rxjs/operators\";\nimport { DataApiService } from \"../services/data-api.service\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AdminGuard implements CanActivate {\n  public isAdmin: any = null;\n  public userUid: string = null;\n\n  constructor(\n    private afsAuth: AngularFireAuth,\n    private router: Router,\n    public dataApi: DataApiService,\n    private authService: AuthService\n  ) {\n    this.authService.isAuth().subscribe((auth) => {\n      if (auth) {\n        this.userUid = auth.uid;\n        this.authService.isUserAdmin(this.userUid).subscribe((userRole) => {\n          console.log(\"userRole\", userRole);\n          this.isAdmin = userRole.admin;\n        });\n      }\n    });\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return this.afsAuth.authState\n      .pipe(take(1))\n      .pipe(map((authState) => !!authState))\n      .pipe(\n        tap((auth) => {\n          if (!auth || !this.isAdmin) {\n            this.router.navigate([\"/user/login\"]);\n          }\n        })\n      );\n  }\n}\n","import { Router } from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { take, map, tap } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private afsAuth: AngularFireAuth, private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return this.afsAuth.authState\n      .pipe(take(1))\n      .pipe(map((authState) => !!authState))\n      .pipe(\n        tap((auth) => {\n          if (!auth) {\n            this.router.navigate([\"/user/login\"]);\n          }\n        })\n      );\n  }\n}\n","import {\n  AngularFirestore,\n  AngularFirestoreDocument,\n} from \"@angular/fire/firestore\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\n\nimport { UserInterface } from \"./../models/user\";\nimport { map } from \"rxjs/operators\";\nimport { promise } from \"protractor\";\nimport { auth } from \"firebase/app\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  constructor(\n    public afAuth: AngularFireAuth,\n    private afs: AngularFirestore,\n    private router: Router\n  ) {}\n\n  registerUser(email: string, pass: string, admin: boolean, name: string) {\n    return new Promise((res, rej) => {\n      this.afAuth\n        .createUserWithEmailAndPassword(email, pass)\n        .then((userData) => {\n          console.log(\"userdata \", userData);\n          res(userData), this.updateUserData(userData.user, admin, name, pass);\n        })\n        .catch((err) => console.log(rej(err)));\n    });\n  }\n\n  loginEmailUser(email: string, pass: string) {\n    return new Promise((res, rej) => {\n      this.afAuth.signInWithEmailAndPassword(email, pass).then(\n        (userData) => res(userData),\n        (err) => rej(err)\n      );\n    });\n  }\n  logoutUser() {\n    return this.afAuth.signOut();\n  }\n\n  isAuth() {\n    return this.afAuth.authState.pipe(map((auth) => auth));\n  }\n\n  private updateUserData(user, admin: boolean, name: string, pass: string) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(\n      `users/${user.uid}`\n    );\n    const data: UserInterface = {\n      id: user.uid,\n      name: name,\n      email: user.email,\n      password: pass,\n      admin: admin,\n      acessos: [],\n    };\n    return userRef.set(data, { merge: true });\n  }\n\n  isUserAdmin(userUid) {\n    return this.afs.doc<UserInterface>(`users/${userUid}`).valueChanges();\n  }\n\n  getUser(userUid) {\n    return this.afs.doc<UserInterface>(`users/${userUid}`).valueChanges();\n  }\n}\n","import { Injectable, Query } from \"@angular/core\";\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreCollection,\r\n  AngularFirestoreDocument,\r\n  AngularFirestoreCollectionGroup,\r\n} from \"@angular/fire/firestore\";\r\nimport { ReturnStatement } from \"@angular/compiler\";\r\n\r\nimport { Observable, from } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { DocInterface } from \"./../models/doc\";\r\nimport { UserInterface } from \"../models/user\";\r\nimport { LogInterface } from \"../models/log\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DataApiService {\r\n  private documentosCollection: AngularFirestoreCollection<DocInterface>;\r\n  private documentos: Observable<DocInterface[]>;\r\n  private documentoDoc: AngularFirestoreDocument<DocInterface>;\r\n  private documento: Observable<DocInterface>;\r\n  public selectedDocumento: DocInterface = {\r\n    id: null,\r\n  };\r\n  private utilizadoresCollection: AngularFirestoreCollection<UserInterface>;\r\n  private utilizadores: Observable<UserInterface[]>;\r\n  private userDoc: AngularFirestoreDocument<UserInterface>;\r\n  private user: Observable<UserInterface>;\r\n  public selectedUser: UserInterface = {\r\n    id: null,\r\n  };\r\n  private logsCollection: AngularFirestoreCollection<LogInterface>;\r\n  private logs: Observable<LogInterface[]>;\r\n  private logDoc: AngularFirestoreDocument<LogInterface>;\r\n  private log: Observable<LogInterface>;\r\n  public selectedlog: LogInterface = {\r\n    id: null,\r\n  };\r\n\r\n  constructor(private afs: AngularFirestore) {\r\n    this.documentosCollection = afs.collection<DocInterface>(\"docs\");\r\n    this.documentos = this.documentosCollection.valueChanges();\r\n    this.utilizadoresCollection = afs.collection<UserInterface>(\"users\");\r\n    this.utilizadores = this.utilizadoresCollection.valueChanges();\r\n    this.logsCollection = afs.collection<LogInterface>(\"logs\");\r\n    this.logs = this.logsCollection.valueChanges();\r\n  }\r\n\r\n  OnInit() {}\r\n\r\n  // queryDocs(userAcessos: []) {\r\n  //   this.documentosCollection.valueChanges().subscribe((docsDb) => {\r\n  //     console.log(\"Docs: \", docsDb);\r\n\r\n  //     let DocsFilterGroup = [];\r\n\r\n  //     docsDb.forEach((item) => {\r\n  //       userAcessos.forEach((acess) => {\r\n  //         if (item.grupo == acess) {\r\n  //           DocsFilterGroup.push(item);\r\n  //         }\r\n  //       });\r\n  //     });\r\n  //     console.log(\"docsFilterGroup: \", DocsFilterGroup);\r\n  //     return DocsFilterGroup;\r\n  //   });\r\n  // }\r\n\r\n  getAllLDocumentos() {\r\n    return (this.documentos = this.documentosCollection.snapshotChanges().pipe(\r\n      map((changes) => {\r\n        return changes.map((action) => {\r\n          const data = action.payload.doc.data() as DocInterface;\r\n          data.id = action.payload.doc.id;\r\n          return data;\r\n        });\r\n      })\r\n    ));\r\n  }\r\n  getOneDocumento(idDocumento: string) {\r\n    this.documentoDoc = this.afs.doc<DocInterface>(`docs/${idDocumento}`);\r\n    return (this.documento = this.documentoDoc.snapshotChanges().pipe(\r\n      map((action) => {\r\n        if (action.payload.exists === false) {\r\n          return null;\r\n        } else {\r\n          const data = action.payload.data() as DocInterface;\r\n          data.id = action.payload.id;\r\n          return data;\r\n        }\r\n      })\r\n    ));\r\n  }\r\n  addDocumento(doc: DocInterface): void {\r\n    this.documentosCollection.add(doc);\r\n  }\r\n\r\n  updateDocumento(documento: DocInterface): void {\r\n    let idDocumento = documento.id;\r\n    this.documentoDoc = this.afs.doc<DocInterface>(`docs/${idDocumento}`);\r\n    this.documentoDoc.update(documento);\r\n  }\r\n\r\n  deleteDocumento(idDocumento: string): void {\r\n    this.documentoDoc = this.afs.doc<DocInterface>(`docs/${idDocumento}`);\r\n    this.documentoDoc.delete();\r\n  }\r\n\r\n  //users\r\n\r\n  getAllLUser() {\r\n    return (this.utilizadores = this.utilizadoresCollection\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((changes) => {\r\n          return changes.map((action) => {\r\n            const data = action.payload.doc.data() as UserInterface;\r\n            data.id = action.payload.doc.id;\r\n            return data;\r\n          });\r\n        })\r\n      ));\r\n  }\r\n\r\n  getOneUser() {\r\n    return this.utilizadoresCollection.valueChanges().subscribe((usersDb) => {\r\n      console.log(\"users: \", usersDb);\r\n      return usersDb;\r\n    });\r\n  }\r\n  //todo\r\n  addUser(user: UserInterface): void {\r\n    this.utilizadoresCollection.add(user);\r\n  }\r\n  //todo\r\n  updateUser(user: DocInterface): void {\r\n    let idUser = user.id;\r\n    this.userDoc = this.afs.doc<DocInterface>(`users/${idUser}`);\r\n    this.userDoc.update(user);\r\n  }\r\n  //todo\r\n  deleteUser(idUser: string): void {\r\n    this.userDoc = this.afs.doc<DocInterface>(`users/${idUser}`);\r\n    this.userDoc.delete();\r\n  }\r\n\r\n  //LOGS\r\n\r\n  getAllLogs() {\r\n    return (this.logs = this.logsCollection.snapshotChanges().pipe(\r\n      map((changes) => {\r\n        return changes.map((action) => {\r\n          const data = action.payload.doc.data() as LogInterface;\r\n          data.id = action.payload.doc.id;\r\n          return data;\r\n        });\r\n      })\r\n    ));\r\n  }\r\n}\r\n","export const environment = {\n  production: true,\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyBt7s9Zqjlz3YYwKHmrtIGzZu2BSnQyHws\",\n    authDomain: \"releasesgg.firebaseapp.com\",\n    databaseURL: \"https://releasesgg.firebaseio.com\",\n    projectId: \"releasesgg\",\n    storageBucket: \"releasesgg.appspot.com\",\n    messagingSenderId: \"382409286701\",\n    appId: \"1:382409286701:web:00f116d4281c1f1ee404a4\",\n    measurementId: \"G-3XYNMLDB02\",\n  },\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyBt7s9Zqjlz3YYwKHmrtIGzZu2BSnQyHws\",\n    authDomain: \"releasesgg.firebaseapp.com\",\n    databaseURL: \"https://releasesgg.firebaseio.com\",\n    projectId: \"releasesgg\",\n    storageBucket: \"releasesgg.appspot.com\",\n    messagingSenderId: \"382409286701\",\n    appId: \"1:382409286701:web:00f116d4281c1f1ee404a4\",\n    measurementId: \"G-3XYNMLDB02\",\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}